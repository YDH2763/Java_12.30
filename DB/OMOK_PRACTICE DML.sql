

USE OMOK;

INSERT INTO USER(U_ID, U_PW, U_LOG) VALUES ('dbehdgns12345','y97d11h28!','Y'),('dbehdrb12345','y96d09k24!','Y');
UPDATE USER SET U_PW='Yudonggyu12!!' WHERE U_ID = 'dbehdrb12345' AND U_PW = 'y96d09k24!' AND U_LOG = 'Y';
INSERT INTO USER VALUE('dbehdgns1234567','y97d11h28!','N');
DELETE FROM USER WHERE U_ID = 'dbehdgns1234567';

SELECT * FROM `USER`;
SELECT * FROM RESULT;
SELECT * FROM SCORE;

INSERT INTO RESULT VALUES (1,'dbehdgns12345',"BLACK",'LOSE',NOW()),(2,'dbehdrb12345',"WHITE",'WIN',NOW());
INSERT INTO SCORE VALUES
 (1,"dbehdgns12345","BLACK",1,0,1,0),(2,"dbehdgns12345","WHITE",0,0,0,0),(3,"dbehdrb12345","BLACK",0,0,0,0),(4,"dbehdrb12345","WHITE",1,1,0,0);

UPDATE RESULT SET R_DATE=NOW() WHERE R_NUM=1; 
UPDATE RESULT SET R_DATE=NOW() WHERE R_NUM=2;  

 # 유저들의 게임 결과가 추가 되면 기존 전적 라인에 결과가 나온 유저와 동일 인물인지 찾고 동일인물이면 해당 유저의 (유저의 진영 판정? 및) '판수'증가 및 승, 패, 무승부 횟수가 변동되는 트리거

DROP TRIGGER IF EXISTS UPLOAD_SCORE;

DELIMITER //
CREATE TRIGGER UPLOAD_SCORE AFTER INSERT
ON RESULT
FOR EACH ROW
BEGIN
	DECLARE _S_POSITION CHAR;
    DECLARE _S_COUNT INT;
    DECLARE _S_WIN INT;
    DECLARE _S_LOSE INT;
    DECLARE _S_DRAW INT;
   
    SET _S_POSITION = (SELECT R_POSITION FROM RESULT WHERE R_NUM = NEW.R_U_ID);
    SET _S_COUNT = (SELECT R_OUTCOME FROM RESULT WHERE R_NUM = NEW.R_U_ID);
	SET _S_WIN = (SELECT R_OUTCOME FROM RESULT WHERE R_NUM = NEW.R_U_ID AND R_OUTCOME = "WIN");
    SET _S_LOSE = (SELECT R_OUTCOME FROM RESULT WHERE R_NUM = NEW.R_U_ID AND R_OUTCOME = "LOSE");
    SET _S_DRAW = (SELECT R_OUTCOME FROM RESULT WHERE R_NUM = NEW.R_U_ID AND R_OUTCOME = "DRAW");

	UPDATE SCORE
    SET 
		S_WIN = S_WIN+1,
		S_LOSE = S_LOSE+1,
		S_DRAW = S_DRAW+1,
	
		S_COUNT = S_COUNT +1
	WHERE
		S_POSITION = _S_POSITION = _S_COUNT AND S_U_ID = NEW.R_U_ID;
	
END //
DELIMITER ;




 
 